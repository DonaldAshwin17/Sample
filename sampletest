import React from 'react';
import { shallow } from 'enzyme';
import CustomTablePagination from './CustomTablePagination';
import IconButton from '@material-ui/core/IconButton';
import KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';
import KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';

describe('CustomTablePagination', () => {
  let wrapper;
  const defaultProps = {
    count: 100,
    rowsPerPage: 10,
    rowsPerPageOptions: [5, 10, 25],
    page: 0,
    handleChangePage: jest.fn(),
    handleChangeRowsPerPage: jest.fn(),
    labelRowsPerPage: 'Rows per page',
  };

  beforeEach(() => {
    wrapper = shallow(<CustomTablePagination {...defaultProps} />);
  });

  it('should render the previous and next buttons', () => {
    // Find IconButton within the component
    const iconButtons = wrapper.find(IconButton);
    expect(iconButtons.length).toBe(2); // One for previous and one for next

    // Ensure KeyboardArrowLeftIcon and KeyboardArrowRightIcon are rendered
    expect(iconButtons.at(0).find(KeyboardArrowLeftIcon).exists()).toBe(true);
    expect(iconButtons.at(1).find(KeyboardArrowRightIcon).exists()).toBe(true);
  });

  it('should call handleChangePage with correct arguments when buttons are clicked', () => {
    const iconButtons = wrapper.find(IconButton);

    // Simulate click on the previous page button
    iconButtons.at(0).simulate('click');
    expect(defaultProps.handleChangePage).toHaveBeenCalledWith(null, defaultProps.page - 1);

    // Simulate click on the next page button
    iconButtons.at(1).simulate('click');
    expect(defaultProps.handleChangePage).toHaveBeenCalledWith(null, defaultProps.page + 1);
  });
});
