import React from 'react';
import { shallow } from 'enzyme';
import { BackAction, CancelAction, DraftOrPublishAction, PreviewAction, SaveAction, CreateVersion } from './Actions';
import ActionButton from './ActionButton';
import { Switch } from '@material-ui/core';

jest.mock('redux-react-hook', () => ({
  useMappedState: jest.fn(),
}));

describe('Actions Components', () => {
  const mockFn = jest.fn();

  afterEach(() => {
    jest.clearAllMocks();
  });

  it('BackAction should render correctly', () => {
    const wrapper = shallow(<BackAction onGoBack={mockFn} />);
    expect(wrapper.find(ActionButton).prop('onClick')).toBe(mockFn);
  });

  it('CancelAction should render correctly', () => {
    const wrapper = shallow(<CancelAction onCancel={mockFn} />);
    expect(wrapper.find(ActionButton).prop('onClick')).toBe(mockFn);
  });

  it('DraftOrPublishAction should render correctly', () => {
    const useMappedState = require('redux-react-hook').useMappedState;
    useMappedState.mockReturnValue(true);

    const wrapper = shallow(<DraftOrPublishAction onDraftOrPublish={mockFn} />);
    expect(wrapper.find(Switch).prop('onChange')).toBe(mockFn);
  });

  it('PreviewAction should render correctly', () => {
    const wrapper = shallow(<PreviewAction onPreview={mockFn} />);
    expect(wrapper.find(ActionButton).prop('onClick')).toBe(mockFn);
  });

  it('SaveAction should render correctly with default props', () => {
    const wrapper = shallow(<SaveAction onSave={mockFn} />);
    expect(wrapper.find(ActionButton).prop('onClick')).toBe(mockFn);
    expect(wrapper.find(ActionButton).prop('disabled')).toBe(false);
  });

  it('SaveAction should render correctly with disabled prop', () => {
    const wrapper = shallow(<SaveAction onSave={mockFn} disabled />);
    expect(wrapper.find(ActionButton).prop('disabled')).toBe(true);
  });

  it('CreateVersion should render correctly', () => {
    const wrapper = shallow(<CreateVersion onCreateVersion={mockFn} />);
    expect(wrapper.find(ActionButton).prop('onClick')).toBe(mockFn);
  });
});
