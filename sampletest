import React from 'react';
import { shallow } from 'enzyme';
import { IconButton, Tooltip } from '@material-ui/core';
import { CustomTablePagination } from './path-to-your-file'; // Adjust the path
import KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';
import KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';

describe('ActionsComponent', () => {
  let wrapper;
  const mockHandleChangePage = jest.fn();
  const defaultProps = {
    page: 1,
    count: 50,
    rowsPerPage: 10,
    handleChangePage: mockHandleChangePage,
  };

  beforeEach(() => {
    wrapper = shallow(<CustomTablePagination.ActionsComponent {...defaultProps} />);
  });

  it('should render the previous and next buttons', () => {
    expect(wrapper.find(IconButton).length).toBe(2);
    expect(wrapper.find(KeyboardArrowLeftIcon).length).toBe(1);
    expect(wrapper.find(KeyboardArrowRightIcon).length).toBe(1);
  });

  it('should call handleChangePage with correct arguments when previous button is clicked', () => {
    const prevButton = wrapper.find(IconButton).at(0);
    prevButton.simulate('click');
    expect(mockHandleChangePage).toHaveBeenCalledWith(null, defaultProps.page - 1);
  });

  it('should call handleChangePage with correct arguments when next button is clicked', () => {
    const nextButton = wrapper.find(IconButton).at(1);
    nextButton.simulate('click');
    expect(mockHandleChangePage).toHaveBeenCalledWith(null, defaultProps.page + 1);
  });

  it('should disable previous button when on the first page', () => {
    wrapper.setProps({ page: 0 });
    const prevButton = wrapper.find(IconButton).at(0);
    expect(prevButton.props().disabled).toBe(true);
  });

  it('should disable next button when on the last page', () => {
    wrapper.setProps({ page: 4, count: 50, rowsPerPage: 10 });
    const nextButton = wrapper.find(IconButton).at(1);
    expect(nextButton.props().disabled).toBe(true);
  });
});
